<!--This Js-impl.xml demos about creating seperate packaging for Sencha 5.0 Js file-->
    <target name="-compile-js" depends="-detect-app-build-properties">
        <if>
            <x-is-true value="${enable.split.mode}"/>
            <then>
                <x-compile refid="${compiler.ref.id}">
                    <![CDATA[
                        # build a separate sdk-only js file
                        exclude
                            -all
                        and
                        #include
                        #    -tag=package-sencha-core,framework
                        include
                            -namespace=Ext
                        and
                        save
                            allframework
                        and
                        intersect
                            -set=page,allframework
                        and
                        save
                            frameworkdeps
                        and
                        ${build.optimize}
                        and
                        concat
                            -remove-text-references=${build.remove.references}
                            -optimize-string-references=${build.optimize.string.references}
                            -remove-requirement-nodes=${build.remove.requirement.nodes}
                            ${build.compression}
                            -out=${build.framework.file}
                            ${build.concat.options}
                        
                        # now build the all-classes file, without
                        # the framework code included
                        and
                        restore
                            page
                        and
                        #CUSTOM BUILD: Changes start
                        ${build.optimize}
                        and 
                        save
                            allcode
						#create Myapppackager (Code For Myapppackager) #####
                        and
                        exclude 
                            -all 
                        and 
                        include 
                            -namespace=Myapp.view.Myapppackager,Myapp.controller.Myapppackager,Myapp.model.Myapppackager,Myapp.store.Myapppackager
                        and 
                        concat 
                            ${build.compression}
                            -out=${build.dir}/Myapppackager.js
                            ${build.concat.options}
                        and
                        restore
                            allcode	
                    ]]>
                </x-compile>
            </then>
            <else>
                <x-compile refid="${compiler.ref.id}">
                    <![CDATA[
                        # build an all-classes.js file that contains
                        # all code needed by the app
                        restore
                            page
                        and
                        ${build.optimize}
                        and
                        concat
                            -remove-text-references=${build.remove.references}
                            -optimize-string-references=${build.optimize.string.references}
                            -remove-requirement-nodes=${build.remove.requirement.nodes}
                            ${build.compression}
                            -out=${build.classes.file}
                            ${build.concat.options}
                    ]]>
                </x-compile>
            </else>
        </if>
    </target>